// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package test

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestPutRequest struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestPutRequest) Reset()         { *m = TestPutRequest{} }
func (m *TestPutRequest) String() string { return proto.CompactTextString(m) }
func (*TestPutRequest) ProtoMessage()    {}
func (*TestPutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *TestPutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestPutRequest.Unmarshal(m, b)
}
func (m *TestPutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestPutRequest.Marshal(b, m, deterministic)
}
func (m *TestPutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestPutRequest.Merge(m, src)
}
func (m *TestPutRequest) XXX_Size() int {
	return xxx_messageInfo_TestPutRequest.Size(m)
}
func (m *TestPutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestPutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestPutRequest proto.InternalMessageInfo

func (m *TestPutRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type TestPutResponse struct {
	Status               *int32   `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestPutResponse) Reset()         { *m = TestPutResponse{} }
func (m *TestPutResponse) String() string { return proto.CompactTextString(m) }
func (*TestPutResponse) ProtoMessage()    {}
func (*TestPutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}

func (m *TestPutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestPutResponse.Unmarshal(m, b)
}
func (m *TestPutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestPutResponse.Marshal(b, m, deterministic)
}
func (m *TestPutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestPutResponse.Merge(m, src)
}
func (m *TestPutResponse) XXX_Size() int {
	return xxx_messageInfo_TestPutResponse.Size(m)
}
func (m *TestPutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestPutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestPutResponse proto.InternalMessageInfo

func (m *TestPutResponse) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*TestPutRequest)(nil), "test.TestPutRequest")
	proto.RegisterType((*TestPutResponse)(nil), "test.TestPutResponse")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x54, 0xb8, 0xf8, 0x42, 0x52,
	0x8b, 0x4b, 0x02, 0x4a, 0x4b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58,
	0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x98, 0x34, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x4d, 0x2e,
	0x7e, 0xb8, 0xaa, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x31, 0x2e, 0xb6, 0xe2, 0x92, 0xc4,
	0x92, 0xd2, 0x62, 0xb0, 0x42, 0xd6, 0x20, 0x28, 0xcf, 0xc8, 0x0b, 0x6e, 0x60, 0x70, 0x6a, 0x51,
	0x59, 0x66, 0x72, 0xaa, 0x90, 0x05, 0x17, 0x3b, 0x54, 0x44, 0x48, 0x44, 0x0f, 0xec, 0x00, 0x54,
	0x1b, 0xa5, 0x44, 0xd1, 0x44, 0x21, 0x36, 0x28, 0x31, 0x38, 0x71, 0x44, 0xb1, 0xe9, 0x59, 0x83,
	0xe4, 0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 0x33, 0xaa, 0x34, 0x4e, 0xb9, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestPutServiceClient is the client API for TestPutService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestPutServiceClient interface {
	TestPut(ctx context.Context, in *TestPutRequest, opts ...grpc.CallOption) (*TestPutResponse, error)
}

type testPutServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestPutServiceClient(cc *grpc.ClientConn) TestPutServiceClient {
	return &testPutServiceClient{cc}
}

func (c *testPutServiceClient) TestPut(ctx context.Context, in *TestPutRequest, opts ...grpc.CallOption) (*TestPutResponse, error) {
	out := new(TestPutResponse)
	err := c.cc.Invoke(ctx, "/test.TestPutService/TestPut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestPutServiceServer is the server API for TestPutService service.
type TestPutServiceServer interface {
	TestPut(context.Context, *TestPutRequest) (*TestPutResponse, error)
}

// UnimplementedTestPutServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestPutServiceServer struct {
}

func (*UnimplementedTestPutServiceServer) TestPut(ctx context.Context, req *TestPutRequest) (*TestPutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestPut not implemented")
}

func RegisterTestPutServiceServer(s *grpc.Server, srv TestPutServiceServer) {
	s.RegisterService(&_TestPutService_serviceDesc, srv)
}

func _TestPutService_TestPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestPutServiceServer).TestPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.TestPutService/TestPut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestPutServiceServer).TestPut(ctx, req.(*TestPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestPutService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.TestPutService",
	HandlerType: (*TestPutServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TestPut",
			Handler:    _TestPutService_TestPut_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}
